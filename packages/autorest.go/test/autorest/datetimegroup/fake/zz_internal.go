// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package fake

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime/datetime"
	"io"
	"net/http"
	"time"
)

type nonRetriableError struct {
	error
}

func (nonRetriableError) NonRetriable() {
	// marker method
}

func contains[T comparable](s []T, v T) bool {
	for _, vv := range s {
		if vv == v {
			return true
		}
	}
	return false
}

func fromPtr[T any](p *T) T {
	if p == nil {
		return *new(T)
	}
	return *p
}

func unmarshalTimeAsJSON(req *http.Request, format datetime.Format) (time.Time, error) {
	if req.Body == nil {
		return time.Time{}, nil
	}
	body, err := io.ReadAll(req.Body)
	if err != nil {
		return time.Time{}, nonRetriableError{err}
	}
	req.Body.Close()
	tt := datetime.New(format, nil)
	if err = json.Unmarshal(body, &tt); err != nil {
		err = nonRetriableError{err}
	}
	return tt.Time(), err
}
